//------------------------------------------------------------------------------
// unit2.cpp
//
// Copyright (c) 2020 glensand
// All rights reserved.
//
// Date: 14.06.2020
// Author: ya_sayanb
//------------------------------------------------------------------------------
#include <iostream>

// Требуется посчитать сумму целых чисел, расположенных между числами 1 и N включительно. 
int main(){
    //0. Объявление переменных

    //Первый член прогрессии.
    const int_least16_t a1 = 1;

    //2^15 > (10^4)
    //Больше о размерах целочисленных типов в unit1.cpp
    int_least16_t N;
    int_fast32_t Result;
    int_least16_t d, n;

    //1. Ввод
    //Целое число, не превышающее по абсолютной величине 10^4.
    std::cin >> N;

    //2. Обработка 

    //Арифметическая прогрессия
    //https://en.wikipedia.org/wiki/Arithmetic_progression
    
    // d - разность прогрессии, n - количество суммируемых членов.
    //Тернарный оператор - сокращение if else до одной строки
    d = N >= a1 ? 1 : -1;
    n = (N - a1) / d + 1;
    
    Result = (2 * a1 + d * (n - 1)) * n / 2;

    //Для справки: деление целых чисел в C++ производится без остатка.

    //3. Вывод
    std::cout << Result;

    //system("pause");
    return 0;
}